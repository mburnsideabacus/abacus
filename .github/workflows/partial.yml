# A Unique name for this workflow
<<<<<<< HEAD
name: CI-ABACUS-PARTIAL
=======
name: CI-LFLPartialSandbox
>>>>>>> a69622703f4907728234f440c88053c26d71863a

# Definition when the workflow should run
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - "sfdx-project.json"
      - "README.md"

# Jobs to be executed
jobs:
  formatting-and-linting:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code in the pull request
      - name: "Checkout source code"
<<<<<<< HEAD
        uses: actions/checkout@v3
=======
        uses: actions/checkout@v4
>>>>>>> a69622703f4907728234f440c88053c26d71863a

      # Cache node_modules to speed up the process
      - name: Restore node_modules cache
        id: cache-npm
<<<<<<< HEAD
        uses: actions/cache@v3
=======
        uses: actions/cache@v4
>>>>>>> a69622703f4907728234f440c88053c26d71863a
        with:
          path: node_modules
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ env.cache-name }}-
            npm-
      # Install npm dependencies for Prettier and Jest
      - name: "Install npm dependencies"
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm install

      # Prettier checking
      - name: "Code formatting verification with Prettier"
        run: npm run prettier --check

      # ESlint
      - name: "Lint Lightning Web Components"
        run: npm run lint

  sandbox-push:
    runs-on: ubuntu-latest
    needs: formatting-and-linting
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # Install Salesforce CLI
      - name: "Install Salesforce CLI"
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version
      # Checkout the source code
      - name: "Checkout source code"
<<<<<<< HEAD
        uses: actions/checkout@v3

      # Store secret for review sandbox
      - name: "Populate auth file with ABACUS_PARTIAL_URL secret"
        shell: bash
        run: |
          echo ${{ secrets.ABACUS_PARTIAL_URL}} > ./ABACUS_PARTIAL_URL.txt
          secretFileSize=$(wc -c "./ABACUS_PARTIAL_URL.txt" | awk '{print $1}')
          if [ $secretFileSize == 1 ]; then
              echo "Missing ABACUS_PARTIAL_URL secret. Is this workflow running on a fork?";
=======
        uses: actions/checkout@v4

      # Store secret for review sandbox
      - name: "Populate auth file with LFL_PARTIAL_SANDBOX_URL secret"
        shell: bash
        run: |
          echo ${{ secrets.LFL_PARTIAL_SANDBOX_URL}} > ./LFL_PARTIAL_SANDBOX_URL.txt
          secretFileSize=$(wc -c "./LFL_PARTIAL_SANDBOX_URL.txt" | awk '{print $1}')
          if [ $secretFileSize == 1 ]; then
              echo "Missing LFL_PARTIAL_SANDBOX_URL secret. Is this workflow running on a fork?";
>>>>>>> a69622703f4907728234f440c88053c26d71863a
              exit 1;
          fi
      # Authenticate sandbox
      - name: "Authenticate Sandbox"
<<<<<<< HEAD
        run: sf org login sfdx-url --sfdx-url-file ./ABACUS_PARTIAL_URL.txt --alias AbacusPARTIAL --set-default

      # Run Deploy Custom Objects
      #- name: "Deploy Custom Objects"
      # run: sf project deploy start --metadata "CustomObject:Client_Objective__c, CustomObject:Client_Objective_TimeSeries__c,CustomObject:TimeSeries_Log__c,CustomObject:Incidental_Data__c,CustomObject:NDIS_Report__c,CustomObject:Objective__c,CustomObject:Program__c,CustomObject:SD__c,CustomObject:Session__c,CustomObject:Session_Obj__c,CustomObject:Session_Statistics__c" -u AbacusPARTIAL

      # Run Deploy CachePartitions
      - name: "Cache Partitions"
        run: sf project deploy start --metadata PlatformCachePartition --target-org AbacusPARTIAL

      # Run Deploy CustomMetadata
      - name: "Custom Metadata"
        run: sf project deploy start --metadata CustomMetadata --target-org AbacusPARTIAL
=======
        run: sf org login sfdx-url --sfdx-url-file ./LFL_PARTIAL_SANDBOX_URL.txt --alias LFLHyperPARTIAL --set-default

      # Run Deploy Custom Objects
      #- name: "Deploy Custom Objects"
      # run: sf project deploy start --metadata "CustomObject:Client_Objective__c, CustomObject:Client_Objective_TimeSeries__c,CustomObject:TimeSeries_Log__c,CustomObject:Incidental_Data__c,CustomObject:NDIS_Report__c,CustomObject:Objective__c,CustomObject:Program__c,CustomObject:SD__c,CustomObject:Session__c,CustomObject:Session_Obj__c,CustomObject:Session_Statistics__c" -u LFLHyperPARTIAL

      # Run Deploy CachePartitions
      - name: "Cache Partitions"
        run: sf project deploy start --metadata PlatformCachePartition --target-org LFLHyperPARTIAL

      # Run Deploy CustomMetadata
      - name: "Custom Metadata"
        run: sf project deploy start --metadata CustomMetadata --target-org LFLHyperPARTIAL
>>>>>>> a69622703f4907728234f440c88053c26d71863a

      # Run Deploy Apex
      - name: "Deploy Apex and Run Specified Tests"
        run: >
          sf project deploy start --metadata AuraDefinitionBundle 
          --metadata ApexClass --metadata ApexTrigger --metadata Flow 
<<<<<<< HEAD
          --metadata LightningMessageChannel --target-org AbacusPARTIAL 
=======
          --metadata LightningMessageChannel --target-org LFLHyperPARTIAL 
>>>>>>> a69622703f4907728234f440c88053c26d71863a
          --test-level RunSpecifiedTests 
          --tests TestL4LController TestL4LSessionStatsController TestL4LSDStageMap TestLFLUtil 
          TestLFLSDWrapper TestL4LTimeSeries TestL4LTimeSeriesScheduler TestLFLClientObjectiveHelper 
          TestLFLInvocableMasteryStatistics TestLFLInvocableReportWizard TestLFLInvocableSessionStatistics 
          TestLFLPopulateTestData TestLFLProgramStatusCascadeUtil TestCascadeProgramStatusTrg TestCascadeSDStatusTrg 
<<<<<<< HEAD
          TestDaysSinceUpdatedTr TestLFLSessionStatsTrg TestClientObjectiveList TestL4LNebulaComponentController 
=======
          TestDaysSinceUpdatedTrg TestLFLSessionStatsTrg TestClientObjectiveList TestL4LNebulaComponentController 
>>>>>>> a69622703f4907728234f440c88053c26d71863a
          TestL4LExceptionRateCalculation TestL4LExceptionClientObjectiveMissing TestTrgUniqueObjectivePerClientObjective 
          TestLFLTimeSeriesBatch TestLFLTimeSeriesBatchScheduler TestLFLDTDRates TestLFLDTDRateMaster 
          TestLFLInvocableListUnusedObj TestL4LStagesByArea TestLFLTSBatchUtil TestLFLTSBatchUtilScheduler 
          TestLFLLoginBannerController TestLFLBackupUtil TestLFLBackupUtilScheduler TestLFLTreeUtil

      # Run Deploy LWC
      - name: "Deploy LWC"
<<<<<<< HEAD
        run: sf project deploy start --metadata LightningComponentBundle --target-org AbacusPARTIAL
=======
        run: sf project deploy start --metadata LightningComponentBundle --target-org LFLHyperPARTIAL
>>>>>>> a69622703f4907728234f440c88053c26d71863a

      # Run Run Apex tests
      - name: "Run Specifed Apex Tests to Gather Code Coverage"
        run: >
<<<<<<< HEAD
          sf apex run test --test-level  RunSpecifiedTests --tests TestL4LController 
          TestL4LSessionStatsController TestL4LSDStageMap TestLFLUtil TestLFLSDWrapper 
          TestL4LTimeSeries TestL4LTimeSeriesScheduler TestLFLClientObjectiveHelper 
=======
          sf apex run test --test-level  RunSpecifiedTests 
          --tests TestL4LController TestL4LSessionStatsController TestL4LSDStageMap TestLFLUtil 
          TestLFLSDWrapper TestL4LTimeSeries TestL4LTimeSeriesScheduler TestLFLClientObjectiveHelper 
>>>>>>> a69622703f4907728234f440c88053c26d71863a
          TestLFLInvocableMasteryStatistics TestLFLInvocableReportWizard TestLFLInvocableSessionStatistics 
          TestLFLPopulateTestData TestLFLProgramStatusCascadeUtil TestCascadeProgramStatusTrg TestCascadeSDStatusTrg 
          TestDaysSinceUpdatedTrg TestLFLSessionStatsTrg TestClientObjectiveList TestL4LNebulaComponentController 
          TestL4LExceptionRateCalculation TestL4LExceptionClientObjectiveMissing TestTrgUniqueObjectivePerClientObjective 
          TestLFLTimeSeriesBatch TestLFLTimeSeriesBatchScheduler TestLFLDTDRates TestLFLDTDRateMaster 
<<<<<<< HEAD
          TestLFLInvocableListUnusedObj TestL4LStagesByArea  TestLFLTSBatchUtil TestLFLTSBatchUtilScheduler 
          TestLFLTreeUtil 
          --target-org AbacusPARTIAL 
          --code-coverage 
          --result-format human 
          --output-dir ./tests/apex -w 20

=======
          TestLFLInvocableListUnusedObj TestL4LStagesByArea TestLFLTSBatchUtil TestLFLTSBatchUtilScheduler 
          TestLFLLoginBannerController TestLFLBackupUtil TestLFLBackupUtilScheduler TestLFLTreeUtil 
          --target-org LFLHyperPARTIAL --code-coverage --result-format human --output-dir ./tests/apex -w 20
>>>>>>> a69622703f4907728234f440c88053c26d71863a
      # Delete temporary test file that Codecov is unable to parse
      #- name: "Delete coverage file (temporary step)"
      #  run: rm ./tests/apex/test-result-707*-codecoverage.json

      # Upload code coverage data
      - name: "Upload code coverage for Apex to Codecov.io"
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: Apex
